/*
 * This file was generated by the Gradle 'init' task.
 *
 * I has been changed in the following ways:
 * a. add "gradle-modules-plugin" and Eclipse- and maven-publish plugin
 * b. use JUnit 5 test-engine
 * c. add source- and target-version
 * d. configuration for publication
 */

version = "1.21.564" // Note: u is the 21st letter in the alphabet.
group = "foo.litu" // litu = li t u = LIbrary used for Testing U

plugins { // ......................................................................................
  id("java-library")
  
  // purpose of contribution in git-branch afi33 is to improve eclipse-task "eclipseClasspath".
  // Thus eclipse-plugin is applied.
  id("eclipse")
  id("maven-publish") // used for publication
  id("org.javamodularity.moduleplugin") // plugin under test
} // end plugins-section _______________________________________________________________________ */

// Note 1: The following line requires at least version "1.6.1-SNAPSHOT" for "org.javamodularity.moduleplugin"
// Note 2: If the following line is active (i.e. NOT commented out) then the ".classpath"-file
//         creatd by Gradle's eclipse-plugin is improved.
modularity.improveEclipseClasspathFile()

repositories { // .................................................................................
  jcenter()
} // end repositories __________________________________________________________________________ */

eclipse.project { // customize Eclipse's project name .............................................
  name = "foo.tu564"
} // end customize Eclipse's project name ______________________________________________________ */

java { // Java version, here latest LTS with modularity support ...................................
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
} // end Java version __________________________________________________________________________ */

// configure JUnit 5 ..............................................................................
dependencies {
  testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.2")
  testRuntimeOnly   ("org.junit.jupiter:junit-jupiter-engine:5.5.2")
  testRuntimeOnly   ("org.junit.platform:junit-platform-launcher:1.5.2")
}

val test by tasks.getting(Test::class) {
  useJUnitPlatform()
  
  testLogging {
    events("PASSED", "FAILED", "SKIPPED")
  }
}
// end configure JUnit 5 _______________________________________________________________________ */

// configure publication ..........................................................................
tasks {
  withType<PublishToMavenLocal>().configureEach {
    onlyIf {
      publication == publishing.publications["binDoc"]
    }
  }
}

publishing {
  publications {
    create<MavenPublication>("binDoc") {
      from(components["java"])
      
      versionMapping {
        usage("java-api") {
          fromResolutionOf("runtimeClasspath")
        }
        usage("java-runtime") {
          fromResolutionResult()
        }
      } // end versionMapping
    } //end create
  } // end publications
}
// end configure publication ___________________________________________________________________ */